<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis3.dao.mapper.StudentMapper">
	
	<!-- =========================  resultMap  ====================== -->
	<resultMap type="com.mybatis3.domain.Student" id="studentResultMap">
		<result column="STUD_ID" property="studId" />
		<result column="NAME" property="name" />
		<result column="EMAIL" property="email" />
		<result column="DOB" property="dob" />
	</resultMap>
	<resultMap type="com.mybatis3.domain.Student" 
	           id="studentWithAddressResultMap" 
	           autoMapping="true">
		<result column="STUD_ID" property="studId" />
		<!-- 
		<result column="NAME" property="name" />
		<result column="EMAIL" property="email" />
		<result column="DOB" property="dob" />
		 -->
		 <association property="address" 
		              javaType="com.mybatis3.domain.Address" 
		              autoMapping="true">
		 	<result column="addr_id" property="addrId"/>
		 </association>
	</resultMap>
	<resultMap type="com.mybatis3.domain.Student"
	           extends="studentResultMap" 
	           id="studentWithCourseResultMap">
	    <result column="student_name" property="name"/>       
		<collection property="courseList"
		            autoMapping="true"
		            ofType="com.mybatis3.domain.Course">
			<result column="course_id" property="courseId"/>
			<result column="course_name" property="name"/>
			<result column="start_date" property="startDate"/>
			<result column="end_date" property="endDate"/>
		</collection>
	
	</resultMap>
	
	<!-- ============================================================ -->
	<!-- @@@@@@@@@@@@@@@@@@@@@ SELECT MAP, List<MAP> @@@@@@@@@@@@@@@@@ -->
		<!-- resultType Map -->
	<select id="findStudentByIdMap"
	        parameterType="java.lang.Integer"
	        resultType="java.util.Map">
		select stud_id as studid, name, email, dob
		  from students
	  	 where stud_id = #{studId}
	</select>
	
	<!-- resultType LIST<Map> -->
	<select id="findAllStudentsMapList"
	        resultType="java.util.Map">
		select stud_id as studid, name, email, dob
		  from students
	</select>
	
	
	<!-- @@@@@@@@@@@@@@@@@@@@@ SELECT ETC (String, Date, Integer, Double) @@@@@@@@@@@@@@ -->
	<select id="findStudentNameList" resultType="java.lang.String">
		select name from students
	</select>
	<select id="findStudentNameById" parameterType="java.lang.Integer" 
									resultType="java.lang.String">
		select name from students where stud_id=#{studId}
	</select>
	<!-- @@@@@@@@@@@@@@@@@@@@@ SELECT[JOIN] DTO, LIST<DTO>  @@@@@@@@@@@@@@@@@@@@@@@ -->
	<!-- resultMap: [ students + courses 조인 ]-->
	<select id="findStudentByIdWithCourses" 
			parameterType="java.lang.Integer"
			resultMap="studentWithCourseResultMap">
		select s.stud_id,s.name as student_name ,s.email,s.phone,s.dob ,
               c.course_id,c.name  as course_name ,c.description,c.start_date,c.end_date
		from students s 
		join course_enrollment ce
		on s.stud_id = ce.stud_id
		join courses c
		on ce.course_id=c.course_id where s.stud_id=#{studId}
	</select>	

	<!-- resultMap : [students + Address join ] -->
	<select id="findStudentByIdWithAddress" parameterType="java.lang.Integer" 
	        resultMap="studentWithAddressResultMap">
		select stud_id, name, email, dob, phone, a.addr_id, street, city, state, zip, country
	  		FROM students s 
	      left outer join addresses a 
	      on s.addr_id=a.addr_id
	      where s.stud_id=#{studId}
	</select>
	
	
	
	
	<!-- ########################### delete  ###################################### -->
	<delete id="deleteStudentById" parameterType="java.lang.Integer">
		delete from students where stud_id = #{studId}
	</delete>
	<delete id="deleteStudentByName" parameterType="java.lang.String">
		delete from students where name = #{name}
	</delete>
	<delete id="deleteStudentByNameLike" parameterType="java.lang.String">
		delete from students where name like #{name}||'%'
	</delete>
	<!-- ########################### select  ###################################### -->
	<update id="updateStudent" parameterType="Student">
		update students set name=#{name}, email=#{email}, dob=#{dob}
			where stud_id=#{studId}
	</update>
	<!-- ########################### insert  항상  property 가 들어감 ########### -->
	<insert id="insertStudent" parameterType="Student">
			insert into students(stud_id, name, email, dob)
			values (#{studId},#{name},#{email},#{dob})
	</insert>
	<insert id="insertStudentBySequence1" parameterType="Student">
			insert into students(stud_id, name, email, dob)
			values (STUDENTS_STUD_ID_SEQ.nextval,#{name},#{email},#{dob})
	</insert>	
	
	        <!-- key값(studid) 을 얻으려고 할때 사용, 위 문장은 studid 값을 가져올수 없다 -->
	<insert id="insertStudentBySequence2" parameterType="Student">
			<selectKey order="BEFORE" keyProperty="studId" resultType="int">
				select STUDENTS_STUD_ID_SEQ.nextval from dual
			</selectKey>
			insert into students(stud_id, name, email, dob)
			values (#{studId},#{name},#{email},#{dob})
	</insert>
	
	<!-- ########################### select  ###################################### -->
	<select id="findStudentByIdResultMap" 
	        parameterType="java.lang.Integer" 
	        resultMap="studentResultMap">
		select stud_id, name, email, dob
		  from students
	  	 where stud_id = #{studId}
	</select>
	
	<!-- resultType Student(DTO type) -->
	<select id="findStudentById"
	        parameterType="java.lang.Integer"
	        resultType="com.mybatis3.domain.Student">
		select stud_id as studid, name, email, dob
		  from students
	  	 where stud_id = #{studId}
	</select>
	
	<!-- resultType LIST<Student> (List DTO type) -->
	<select id="findAllStudents"
	        resultType="com.mybatis3.domain.Student">
		select stud_id as studid, name, email, dob
		  from students
	</select>
	<!-- ########### parameter Type [java.util.Map, java.util.Map ] ################################ -->
	<update id="updateStudentParamMap" parameterType="java.util.Map" >
		update students set name=#{name}, email=#{email}, dob=#{dob}
			where stud_id=#{studId}
	</update>
	<select id="findStudentByIdRangeParamMap"
	        parameterType="map"
	        resultType="com.mybatis3.domain.Student">
		select stud_id as studid, name, email, dob
		  from students
	  	 where stud_id &gt;= #{startNo} and stud_id &lt;= #{endNo} 
	</select>
	<select id="findStudentByIdThreeParamMap"
	        parameterType="map"
	        resultType="com.mybatis3.domain.Student">
		select stud_id as studid, name, email, dob
		  from students
	  	 where stud_id in (#{first.studId}, #{second.studId}, #{third.studId}) 
	</select>
	
	
	

</mapper>


